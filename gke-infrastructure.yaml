apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-${_NAMESPACE}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app-${_NAMESPACE}
        image: gcr.io/$PROJECT_ID/simple-flask-app-${_NAMESPACE}:latest
        ports:
        - containerPort: 5000
        env:
           - name: PORT
             value: "5000"
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - ${_ENV-SUBDOMAIN}.grofeno.com
    - www.${_ENV-SUBDOMAIN}.grofeno.com
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "flask-app-${_NAMESPACE}-service"
  namespace: "flask-app-${_NAMESPACE}"
  labels:
    app.kubernetes.io/managed-by: "gcp-cloud-build-deploy"
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
  selector:
    app: "gcp"
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: managed-cert-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: ${_EXTERNAL_IP}
    networking.gke.io/managed-certificates: managed-cert
    kubernetes.io/ingress.class: "gce"  # Updated annotation
spec:
  defaultBackend:
    service:
      name: flask-app-${_NAMESPACE}-service
      port:
        number: 80